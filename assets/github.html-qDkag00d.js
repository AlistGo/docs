import{_ as h,a as d,b as s}from"./3-_6WWsOO7.js";import{_ as l,r as o,o as m,c,b as e,e as t,a,f as r}from"./app-Emmm8jnP.js";const u={},p=r('<h1 id="github-api" tabindex="-1"><a class="header-anchor" href="#github-api" aria-hidden="true">#</a> GitHub API</h1><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>GitHub API does not support operating files larger than 100MiB and folders containing more than 100,000 sub-items.</p><p>All <code>.gitkeep</code> files will be managed by the driver and will be invisible to the user.</p><p>Operations on submodules are currently not supported.</p></div><h2 id="token" tabindex="-1"><a class="header-anchor" href="#token" aria-hidden="true">#</a> <strong>Token</strong></h2>',3),f={href:"https://github.com/settings/tokens",target:"_blank",rel:"noopener noreferrer"},g=e("li",null,[e("img",{src:h,alt:""})],-1),b=e("li",null,[e("img",{src:d,alt:""})],-1),w=e("li",null,[e("img",{src:s,alt:""})],-1),_=r('<h2 id="owner" tabindex="-1"><a class="header-anchor" href="#owner" aria-hidden="true">#</a> <strong>Owner</strong></h2><p>The owner of the repository. For example, if the URL of the repository is <code>github.com/AAA/BBB</code>, fill in <code>AAA</code> here.</p><h2 id="repo" tabindex="-1"><a class="header-anchor" href="#repo" aria-hidden="true">#</a> <strong>Repo</strong></h2><p>The name of the repository. For example, if the URL of the repository is <code>github.com/AAA/BBB</code>, fill in <code>BBB</code> here.</p><h2 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> <strong>Ref</strong></h2><p>A branch, a tag or a commit SHA. Only when a branch name is filled in is the driver writable. It defaults to the default branch if not filled.</p><h2 id="committer-name" tabindex="-1"><a class="header-anchor" href="#committer-name" aria-hidden="true">#</a> <strong>Committer name</strong></h2><p>Custom committer name, defaulting to the owner&#39;s of the token when not filled.</p><h2 id="committer-email" tabindex="-1"><a class="header-anchor" href="#committer-email" aria-hidden="true">#</a> <strong>Committer email</strong></h2><p>Custom committer name, defaulting to the owner&#39;s of the token when not filled.</p><p>Required when &quot;Committer name&quot; is filled. Required to be empty when &quot;Committer name&quot; is empty.</p><h2 id="author-name" tabindex="-1"><a class="header-anchor" href="#author-name" aria-hidden="true">#</a> <strong>Author name</strong></h2><p>Custom author name, defaulting to the owner&#39;s of the token when not filled.</p><h2 id="author-email" tabindex="-1"><a class="header-anchor" href="#author-email" aria-hidden="true">#</a> <strong>Author email</strong></h2><p>Custom author name, defaulting to the owner&#39;s of the token when not filled.</p><p>Required when &quot;Author name&quot; is filled. Required to be empty when &quot;Author name&quot; is empty.</p><h2 id="commit-message" tabindex="-1"><a class="header-anchor" href="#commit-message" aria-hidden="true">#</a> <strong>commit message</strong></h2><p>Custom commit message, supporting the following template variablesï¼š</p><ul><li><code>UserName</code>: the user operating the file.</li><li><code>ObjName</code>: the name of the file (or the folder) operated.</li><li><code>ObjPath</code>: the path to the file (or the folder) operated.</li><li><code>ParentName</code>: the name of the parent folder of the file (or the folder) operated.</li><li><code>ParentPath</code>: the path to the parent folder of the file (or the folder) operated.</li><li><code>TargetName</code>: (when renaming) new name. (when copying and moving) the target folder name.</li><li><code>TargetPath</code>: (when renaming) new path. (when copying and moving) the target path.</li></ul><h3 id="the-default-download-method-used" tabindex="-1"><a class="header-anchor" href="#the-default-download-method-used" aria-hidden="true">#</a> <strong>The default download method used</strong></h3>',20);function A(k,x){const n=o("ExternalLinkIcon"),i=o("Mermaid");return m(),c("div",null,[p,e("ol",null,[e("li",null,[t("Log in GitHub and visit "),e("a",f,[t("https://github.com/settings/tokens"),a(n)]),t(".")]),g,b,w]),_,a(i,{id:"mermaid-133",code:"eJydkE1vwjAMhu/8CguutKztAC3SNmniuNO0aYeKQz6cJSJtuiSlVOLHr7QFscMkNF8S2+/zynYURZOgg0ECn0pzBcI2pbFUQIFBWQHaQ+1RAGtBoKS1Cc+TEySNbbiiLsD7ywS68KE1CDQBqY0hM8bk3Adnd0hmcrUa/1GjRVAkrQ5zbo11XU/KazwdcSnXy/Xy4pBl2W+H++owYDX7crRSoAUmkMO2r9Kkf7AUY5pnd+mWEOJtgdxQ7x+7OI4LHWmadzs6wO9aVwWWYXDphRuUcKHOwz2sBkGSG8upgcrZQ7uNYmoCupIGvcc4evrDliX55nzkHoSPt9dbYW40352uPI3jhXCd1vkFt0Vhy1iFwswaZILuo8p2wnZ6xbB/MPxm5gdtZr9x"})])}const C=l(u,[["render",A],["__file","github.html.vue"]]);export{C as default};

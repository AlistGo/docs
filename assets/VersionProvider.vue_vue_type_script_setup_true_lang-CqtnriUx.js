import{d as v,a6 as l,k as c,u as a,o as d,t as p,_ as k,r as _,a7 as g,a8 as f}from"./app-Ch1FfIRv.js";const w={key:0,class:"loading"},E=["href"],$="alist-version",y="alist-version-loading",D=v({__name:"DownloadLink",props:{filename:{},type:{},tpl:{}},setup(r){const t=l($),o=l(y);if(!t||!o)throw new Error("DownloadLink must be used within VersionProvider");const e=r;function i(){const s=t.value;if((e.type??"server")==="desktop"){const m=(e.tpl??"alist-desktop_{ver}_aarch64.dmg").replaceAll("{ver}",s||"3.52.0");return`https://alistgo.com/download/Alist/desktop-v${s}/${m}`}const u=e.filename??"";return`https://alistgo.com/download/Alist/v${s}/alist-${s}-${u}`}let n="Download";return location.pathname.startsWith("/zh/")&&(n="下载"),(s,h)=>a(o)?(d(),c("span",w,p(a(n))+"...",1)):(d(),c("a",{key:1,href:i(),target:"_blank"},p(a(n)),9,E))}}),S=k(D,[["__scopeId","data-v-8ac5a2f2"]]),I="alist-version",N="alist-version-loading",V=v({__name:"VersionProvider",setup(r){const t=_(""),o=_(!0);return f(I,t),f(N,o),fetch("https://dapi.alistgo.com/v0/version/latest").then(e=>e.json()).then(e=>{t.value=e.version}).catch(e=>{console.error("fetch version failed",e),t.value="3.52.0"}).finally(()=>{o.value=!1}),(e,i)=>g(e.$slots,"default")}});export{S as D,V as _};

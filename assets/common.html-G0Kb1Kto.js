import{_ as h}from"./ref_token-xHsyc92c.js";import{_,r as o,o as g,c as b,b as n,e as t,a as e,w as s,f as l}from"./app-iYgfbW7h.js";const k={},m=l('<h1 id="通用项" tabindex="-1"><a class="header-anchor" href="#通用项" aria-hidden="true">#</a> 通用项</h1><h2 id="挂载路径" tabindex="-1"><a class="header-anchor" href="#挂载路径" aria-hidden="true">#</a> <strong>挂载路径</strong></h2><p>唯一标识，即要挂载到的位置，如果要挂载到根目录，就是 <code>/</code></p><br><h2 id="序号" tabindex="-1"><a class="header-anchor" href="#序号" aria-hidden="true">#</a> <strong>序号</strong></h2><p>当有多个账户时，用于排序，越小越靠前，可以填写负数</p><br><h2 id="备注" tabindex="-1"><a class="header-anchor" href="#备注" aria-hidden="true">#</a> <strong>备注</strong></h2><p>随便你想填什么，只是提醒你这个存储是什么</p>',9),f={id:"从-已挂载的存储-中引用认证、令牌等-同一个token多个网盘使用",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#从-已挂载的存储-中引用认证、令牌等-同一个token多个网盘使用","aria-hidden":"true"},"#",-1),v=n("strong",null,[t("从 "),n("code",null,"已挂载的存储"),t(" 中引用认证、令牌等，同一个Token多个网盘使用")],-1),L=n("p",null,"目前仅支持如下网盘：",-1),R=n("ul",null,[n("li",null,"中国移动云盘"),n("li",null,"阿里云盘Open"),n("li",null,"天翼云盘客户端"),n("li",null,"123云盘分享（引用123云盘）")],-1),w=n("p",null,[t("在存储设置中将"),n("code",null,"备注(Remark)"),t("的第一行设置为："),n("strong",null,"ref:/挂载路径")],-1),A={href:"https://github.com/AlistGo/alist/pull/7805",target:"_blank",rel:"noopener noreferrer"},U=l('<p><img src="'+h+'" alt=""></p><br><h2 id="启用签名" tabindex="-1"><a class="header-anchor" href="#启用签名" aria-hidden="true">#</a> <strong>启用签名</strong></h2><p>对文件进行签名加密(不会需要密码)，仅对本驱动生效，如果别的没启用签名也没设置<code>签名全部</code>和<code>元信息加密</code>其他的不会进行签名</p><p>使用场景：不想开启全部签名，也不想设置元信息加密，只想对某驱动进行签名加密防止被扫</p><p>影响范围：<code>设置--&gt;全局--&gt;签名所有</code> &gt; <code>元信息目录加密</code> &gt; <code>单驱动签名</code></p><br><h2 id="禁用索引" tabindex="-1"><a class="header-anchor" href="#禁用索引" aria-hidden="true">#</a> <strong>禁用索引</strong></h2><p>允许用户禁用存储索引。</p><ul><li>例如索引选项中的<code>忽略索引</code>，启用<code>禁用索引</code>后不需要再去配置了，这样也更方便一些</li></ul>',10),E={href:"https://github.com/AlistGo/alist/pull/7730",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/AlistGo/alist-web/pull/219",target:"_blank",rel:"noopener noreferrer"},S=n("br",null,null,-1),T=n("h2",{id:"缓存过期",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#缓存过期","aria-hidden":"true"},"#"),t(),n("strong",null,"缓存过期")],-1),W=n("p",null,"目录结构的缓存时间。",-1),N=n("br",null,null,-1),D=n("h2",{id:"web-代理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#web-代理","aria-hidden":"true"},"#"),t(),n("strong",null,"Web 代理")],-1),O=l('<hr><ul><li>Web代理：是使用网页时候的策略，默认为本地代理，如果填写了代理URL并且启用了Web代理使用的是代理URL</li><li>WebDAV策略：是在使用WebDAV功能时候的选项， <ul><li>如果有302选项默认为302，如果没有302选项默认为本地代理，如果要使用代理URL请填写并且手动切换到代理URL策略</li></ul></li></ul><p>两者是不同的配置</p><br><h2 id="webdav-策略" tabindex="-1"><a class="header-anchor" href="#webdav-策略" aria-hidden="true">#</a> <strong>WebDAV 策略</strong></h2><ul><li>302 重定向：重定向到真实链接</li><li>使用代理 URL：重定向到代理 URL</li><li>本机代理：直接通过本地中转返回数据（最佳兼容性）</li></ul><hr><ul><li>302重定向：虽然不会消耗流量，但是不建议共享使用，有封禁账户的风险</li><li>代理URL：会消耗搭建代理URL的流量</li><li>本地代理：会消耗搭建AList设备的流量</li></ul><h3 id="三种模式说明" tabindex="-1"><a class="header-anchor" href="#三种模式说明" aria-hidden="true">#</a> <strong>三种模式说明</strong></h3>',9),B=n("br",null,null,-1),I=n("h2",{id:"下载代理-url",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载代理-url","aria-hidden":"true"},"#"),t(),n("strong",null,"下载代理 URL")],-1),V=n("p",null,"开启代理时不填写此字段，默认使用本机进行传输。提供了下面两种代理方式：",-1),K=n("p",null,"可以使用 Cloudflare Workers 做代理，这里填写 Workers 地址即可。",-1),Q={href:"https://github.com/alist-org/alist-proxy/blob/main/alist-proxy.js",target:"_blank",rel:"noopener noreferrer"},G=n("ul",null,[n("li",null,[t("ADDRESS: 你的 AList 地址，必须加上协议头，后面不能跟 "),n("code",null,"/"),t("。如 "),n("code",null,"https://pan.nn.ci"),t("；")]),n("li",null,"TOKEN: 在 AList 管理页面中进入“其他设置”得到；"),n("li",null,[t("WORKER_ADDRESS: 你的 Worker 地址，通常与 "),n("strong",null,"下载代理URL"),t(" 相同。")])],-1),z=n("p",null,[t("⚠️ Cloudflare Workers 免费CDN支持兼容(不论国内还是国外)的只有 "),n("strong",null,"http80端口"),t(" 和 "),n("strong",null,"https443端口"),t("，来自群友测试")],-1),C=n("ul",null,[n("li",null,[t("在Alist后台挂载配置时 填写 "),n("strong",null,"下载代理URL"),t(" 时候的 链接结尾 不可以带 "),n("code",null,"/")])],-1),F={href:"https://anwen-anyi.github.io/index/11-durl.html",target:"_blank",rel:"noopener noreferrer"},P=n("strong",null,"有拆解详细",-1),j=n("p",null,null,-1),H={href:"https://github.com/alist-org/alist-proxy/releases",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"./alist-proxy -help",-1),Y={href:"https://www.bilibili.com/video/BV17N411S7fg/",target:"_blank",rel:"noopener noreferrer"},Z=n("strong",null,"视频教程",-1),J=l('<p>你甚至可以开发自己的代理程序，一般步骤是：</p><ul><li>下载时会请求 <code>PROXY_URL/path?sign=sign_value</code></li><li>在代理程序中验证 sign，sign 的计算方法为：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> to_sign <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>expireTimeStamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n<span class="token keyword">const</span> _sign <span class="token operator">=</span> <span class="token function">safeBase64</span><span class="token punctuation">(</span><span class="token function">hmac_sha256</span><span class="token punctuation">(</span>to_sign<span class="token punctuation">,</span> <span class="token constant">TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> sign <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>_sign<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>expireTimeStamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),M=n("code",null,"TOKEN",-1),q=l('<ul><li>验证签名正确后，请求 <code>HOST/api/fs/link</code>，可以得到文件的 URL 和要携带的请求头</li><li>使用信息请求和返回</li></ul><br><h2 id="排序相关" tabindex="-1"><a class="header-anchor" href="#排序相关" aria-hidden="true">#</a> <strong>排序相关</strong></h2><ul><li>排序方式：按什么排序</li><li>排序方向：排序方向是升序还是降序</li></ul><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>有些驱动器使用自己的排序方法，可能会有所不同。</p></div><br><h2 id="提取文件夹" tabindex="-1"><a class="header-anchor" href="#提取文件夹" aria-hidden="true">#</a> <strong>提取文件夹</strong></h2><ul><li>提取到前面：排序时将所有文件夹放在前面</li><li>提取到后面：排序时将所有文件夹放在后面</li></ul>',8);function $(nn,tn){const p=o("Badge"),a=o("ExternalLinkIcon"),c=o("RouterLink"),u=o("Mermaid"),d=o("Tabs");return g(),b("div",null,[m,n("h3",f,[x,t(),v,t(),e(p,{text:"≥ 3.42.0",type:"info",vertical:"middle"})]),L,R,w,n("ul",null,[n("li",null,[n("a",A,[t("https://github.com/AlistGo/alist/pull/7805"),e(a)])])]),U,n("p",null,[n("a",E,[t("alist#7730"),e(a)]),t("、"),n("a",y,[t("alist-web#219"),e(a)])]),S,T,W,N,D,n("p",null,[t("网页预览、下载和直接链接是否通过中转。如果你打开此项，建议你设置"),e(c,{to:"/zh/config/configuration.html#site_url"},{default:s(()=>[t("site_url")]),_:1}),t("，以帮助alist更好的工作。")]),O,e(u,{id:"mermaid-173",code:"eJylUU1LAlEUXTu/YpYGDUTtggIrF4GLEFpZi4giQQpMaNEEY35nfpFlqaChaeBHimKT49SP6d03M/+i9+apuZA2DQzcd949555znyAInM/t8xyt8itLy0YkAe08pDPfkh8pFS0d3vV6SI2LTSh2GMJRyrHn7OLw5MDr4x1OzmK3atlXHH3HdwmkFm0O97lP7wQIZtvZ5vdOeb1eg1RGK8gQ6hGItaEhQR7pNatw8gVnBxDtQEZFShVGEtTjOFbXn28XOIvNZWVtC/ucZcOK1DIBN11jk04HQbcuZ21eEVtra+s28ts5nny0ErVCn8xBSpKJoVFZU56IGJJbRq6Pc2WkKEi9x4mSLuWoN7IUPaAiOa6rKlTz8NWAThcXY6wWN5i0IKyLTBFCURLVkPxUd2JO3KQNEE5o2e4U1NUmXYo53lzSzBl9xCGdXDSN0claPmhIJRjWaCOkHiDcQ8Pk9IWM6wqSJa3xhuQbRiDBxnoT5t9WcboFytB8OcLQ259QjYhbv67n3f8/wIzqTASzPzggfBpnXhDuB/KHmYI="}),B,I,V,e(d,{id:"181",data:[{id:"cloudflare workers"},{id:"通用二进制"}]},{title0:s(({value:i,isActive:r})=>[t("cloudflare workers")]),title1:s(({value:i,isActive:r})=>[t("通用二进制")]),tab0:s(({value:i,isActive:r})=>[K,n("p",null,[t("Workers 代码可以在 "),n("a",Q,[t("https://github.com/alist-org/alist-proxy/blob/main/alist-proxy.js"),e(a)]),t(" 找到，实际使用时需要替换其中的这两个变量：")]),G,z,C,n("p",null,[t("若看不懂"),n("a",F,[P,e(a)]),t("的教程")]),j]),tab1:s(({value:i,isActive:r})=>[n("p",null,[t("也可以使用另一台机器进行代理，在 "),n("a",H,[t("https://github.com/alist-org/alist-proxy/releases"),e(a)]),t(" 下载程序并通过 "),X,t(" 查看使用方法。")]),n("p",null,[t("如果不懂有详细"),n("a",Y,[Z,e(a)])])]),_:1}),J,n("p",null,[M,t("即管理员账户的"),e(c,{to:"/zh/config/other.html#token"},{default:s(()=>[t("token")]),_:1}),t(".")]),q])}const sn=_(k,[["render",$],["__file","common.html.vue"]]);export{sn as default};
